<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Natas on My New Hugo Site</title>
    <link>http://localhost:1313/natas/</link>
    <description>Recent content in Natas on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/natas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Level 12</title>
      <link>http://localhost:1313/natas/level12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/natas/level12/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://natas12.natas.labs.overthewire.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreffer &#34;&gt;http://natas12.natas.labs.overthewire.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;This one took me quite a while to figure out using several tutorials from different websites. First we see an upload dialogue allowing us to upload a JPEG file.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/ox-hugo/clipboard-20250310T165111.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;&#xA;&lt;p&gt;If a webpage allows to upload files, the developer has to make sure that the backend checks appropriately for filetypes and malicious intent. So here I assume that no proper checking is done and we can do something malicious.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
